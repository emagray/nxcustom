// Sets default application to start when no application argument is passed.
// Matches the /application or /a argument.
//NXCUSTOM_APPLICATION_NAME=

// Sets the default package name when no package argument is passed.
// Matches the /package or /p argument.
//NXCUSTOM_PACKAGE_NAME=

// Sets the group name to use. A folder by the same name must exist within
// the ${NXCUSTOM_CUSTOMER_DEFAULTS_DIR}\Groups\ folder.
// Matches the /group or /g argument.
//NXCUSTOM_GROUP=

// Sets the default routing units.
// Matches the /units or /u argument.
//UGII_ROUTING_KIT_UNITS=

// Set preference for running single or multiple sessions.
// This parameter is only applicable for NX.
// SINGLE   = Only one session of NX is started for the same version.
// MULTIPLE = Each run will start a new NX instance.
// Matches the /sessions or /s argument.
//NXCUSTOM_SESSIONS=

// Set preference for running in managed or native mode.
// This parameter is only applicable for NX.
// TRUE  = NX session will run in managed mode.
// FALSE = NX session will run in native mode.
// Matches the /managed or /m argument.
//NXCUSTOM_TEAMCENTER_ACTIVE=

// Set the variable below to the directory you would like the application to start in.
// If the directory you specify does not exist, a warning will be issued and the application
// will fallback to the first of the following directories which does exist:
// ${HOMEDRIVE}${HOMEPATH}
// ${TC_TMP_DIR}
// ${UGII_TMP_DIR}
// ${TEMP}
// Matches the /workdir or /w argument.
//START_DIR=

// Set custom title suffix.
// For this to work, custom_dirs.dat must point to ${UGII_USER_PROFILE_DIR}.
// Matches the /title or /t argument.
//NXCUSTOM_TITLE=

// Sets SALT license server to use.
// Matches the /saltlic argument.
// Uncomment the line below to activate.
//SALT_LICENSE_SERVER=

// Sets SPLM license server to use.
// Matches the /licserver or /l argument.
// Uncomment the line below to activate.
//SPLM_LICENSE_SERVER=

// Sets CDLMD license server to use.
// Matches the /cdlmdlic argument.
// Uncomment the line below to activate.
//CDLMD_LICENSE_FILE=

// Sets license bundle to use.
// Matches the /licbundle argument.
// Uncomment the line below to activate.
//UGII_LICENSE_BUNDLE=

// Set the name of the Teamcenter environment configuration file to use.
// The actual name of the file used will be TCenv_%{NXCUSTOM_TEAMCENTER_ENV}.conf,
// so set the following variable and create your configuration file accordingly.
// Matches the /tcenv argument.
//NXCUSTOM_TEAMCENTER_ENV=

// Sets additional arguments to pass to the application being started.
// Matches the /passargs argument.
//NXCUSTOM_PASSED_ARGUMENTS=

// Set if you want to store the Customer defaults in Managed Mode at a different location.
// TRUE  = Managed Customer Defaults will be stored in the folder TC under the default ..\CustomerDefaults folder.
//         Be aware that it requires 2 sets of Customer defaults to be managed on Site and Group level!
// FALSE = Managed Customer Defaults will be used from the same location as native.
// This cannot be set with an argument.
//NXCUSTOM_MANAGED_CUSTOMER_DEFAULTS=

// Set location of user NX User files.
// 1 = ${NXCUSTOM_LIB}\CustomerDefaults\Users\${USERNAME} (default)
// 2 = ${HOMEDRIVE}${HOMEPATH}\NXcustom\${NXCUSTOM_APPLICATION_VERSION}
// 3 = ${APPDATA}\NXcustom\${NXCUSTOM_APPLICATION_VERSION}
// 4 = ${LOCALAPPDATA}\Siemens\NX${NXCUSTOM_APPLICATION_VERSION} (Siemens default)
// Any other value will be presumed as an existing path where "\${USERNAME}\${NXCUSTOM_APPLICATION_VERSION}" will be appended. If path is missing, it will be reported.
// This cannot be set with an argument.
//NXCUSTOM_USER_SETTINGS_LOCATION=

// Display NX version in window title.
// For this to work, custom_dirs.dat must point to ${UGII_USER_PROFILE_DIR}.
// This cannot be set with an argument.
//NXCUSTOM_VERSION_IN_TITLE=

// Display library name in window title.
// For this to work, custom_dirs.dat must point to ${UGII_USER_PROFILE_DIR}.
// This cannot be set with an argument.
//NXCUSTOM_LIBNAME_IN_TITLE=

// Use assembly load options saved in user settings directory.
// FALSE = default assembly load options used (default)
// TRUE  = assembly load options used will be ${UGII_USER_PROFILE_DIR}\load_options.def
// This cannot be set with an argument.
//NXCUSTOM_LOAD_OPTIONS_IN_USER_DIR=

// Set documentation server.
// Uncomment the line below to activate.
// This cannot be set with an argument.
//UGII_UGDOC_BASE=

// Set whether the command prompt displays a report of environment variables.
// TRUE     = Report variables in the command prompt window.
// FALSE    = Do not display variables.
// SHOW_LOG = Display log file containing reported variables.
// This cannot be set with an argument.
//NXCUSTOM_REPORT_VARS=
